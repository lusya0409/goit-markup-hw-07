//@include имя Добавляем свойства записанные в mixin к селектору
@mixin centeredFlex($type: flex) {
  display: $type;
  align-items: center;
  justify-content: center;
}
//     @include centeredFlex();

@mixin retina2x {
  @media screen and (min-device-pixel-ratio: 2),
    screen and (min-resolution: 192dpi),
    screen and (min-resolution: 2dppx) {
    @content;
  }
}
// @include retina2x();

// @mixin mobile {
//   @media screen and (max-width: 767px) {
//     @content;
//   }
// }
// @include mobile();
// @mixin tablet {
//   @media screen and (min-width: 768px) {
//     @content;
//   }
// }
// @mixin desktop {
//   @media screen and (min-width: 1200px) {
//     @content;
//   }
// }

//Для каждого значения в списке применить следующие значения

// $icons: 'facebook', 'github', 'linkedin', 'twitter';
// @each $iconName in $icons {
//     .icon-#{$iconName} {
//         background-image: url("../../images/#{$iconName}.svg");
//     }
// }

//Лучше через mixin
// @mixin generateIcons($iconList) {
//     @each $iconName in $icons {
//         .icon-#{$iconName} {
//             background-image: url("../../images/#{$iconName}.svg");
//         }
//     }

// }
// @include generateIcons($icons);

// @mixin media($size) {
//   @media screen and (min-width: $size) {
//     @content;
//   }
// }

// @include media(768px) {
//     max-width: 720px;
// }

// Для размещения картинок на странице, когда промежуток (gap: 24px) одинаковый
// @mixin calc($count) {
//   width: calc((100% - 24px * ($count - 1)) / $count);
// }
// 2- кол-во картинок в ряду
// @include calc(2);

// Для размещения картинок(т.п.) на странице, когда промежуток (gap) разный

// @mixin calc($count, $gap) {
//   width: calc((100% - $gap * ($count - 1)) / $count);
// }
// @include calc(2, 24px);
